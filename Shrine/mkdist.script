# vim: set ft=bash:

wait	10
command	Del("/Misc/Bible.TXT.Z");

# The idea is to get a package manager running as early as possible,
# and used for the rest of the content

# Inject SnailNet, because Pkg depends on it
# !!! We need to inject a dummy version of SnailLib
#     (we don't actually need network access)
#     because SnailLib proper re-includes /Doc/Comm, which
#     would reset all RX fifos to NULL and break the MFA connection
command	DirMk("/Adam/Net");
put	/Adam/Net/Http.HC.Z	Shrine/Packages/SnailNet/Http.HC
put	/Adam/Net/SnailLib.HC.Z	Shrine/SnailLibDummy.HC
put	/Adam/Net/Url.HC.Z	Shrine/Packages/SnailNet/Url.HC

# Inject Pkg
put	/Apps/Pkg.HC.Z	Shrine/Packages/Pkg/Pkg.HC
command	#include "/Apps/Pkg"

# From this point on, we have a package manager -- and we're not scared to use it

# Lsh
put	/Tmp/Lsh.HC.Z	Shrine/Packages/Lsh/Lsh.HC
put	/Tmp/Lsh.MF	Shrine/Packages/Lsh/manifest
command	PkgMakeFromFile("/Tmp/Lsh.MF", "/Tmp/Lsh.HC.Z");
command	PkgInstallFromFile("/Tmp/Lsh.MF");
list	/Tmp/Lsh.ISO.C	PkgBin/Lsh.ISO.C
list	/Tmp/Lsh.MF	PkgBin/Lsh.MF

# Mfa
put	/Tmp/Mfa.HC.Z	Shrine/Packages/Mfa/Mfa.HC
put	/Tmp/Mfa.MF	Shrine/Packages/Mfa/manifest
command	PkgMakeFromFile("/Tmp/Mfa.MF", "/Tmp/Mfa.HC.Z");
command	PkgInstallFromFile("/Tmp/Mfa.MF");
list	/Tmp/Mfa.ISO.C	PkgBin/Mfa.ISO.C
list	/Tmp/Mfa.MF	PkgBin/Mfa.MF

# Pkg
put	/Tmp/Pkg.HC.Z	Shrine/Packages/Pkg/Pkg.HC
put	/Tmp/Pkg.MF	Shrine/Packages/Pkg/manifest
command	PkgMakeFromFile("/Tmp/Pkg.MF", "/Tmp/Pkg.HC.Z");
command	PkgInstallFromFile("/Tmp/Pkg.MF");
list	/Tmp/Pkg.ISO.C	PkgBin/Pkg.ISO.C
list	/Tmp/Pkg.MF	PkgBin/Pkg.MF

# Shrine
command	DirMk("/Tmp/Shrine");
command	DirMk("/Tmp/Shrine/Adam");
command	DirMk("/Tmp/Shrine/Doc");
command	DirMk("/Tmp/Shrine/Misc");
put	/Tmp/Shrine/Once.HC.Z	Shrine/Patched/Once.HC
put	/Tmp/Shrine/Adam/ADefine.HC.Z	Shrine/Patched/Adam/ADefine.HC
put	/Tmp/Shrine/Doc/Start.DD.Z	Shrine/Patched/Doc/Start.DD
put	/Tmp/Shrine/Misc/DoDistro.HC.Z	Shrine/Patched/Misc/DoDistro.HC
put	/Tmp/Shrine/Misc/PalUbuntu.HC.Z	Shrine/Branding/PalUbuntu.HC
put	/Tmp/Shrine.MF	Shrine/Packages/Shrine/manifest
command	PkgMakeFromDir("/Tmp/Shrine.MF", "/Tmp/Shrine");
command	PkgInstallFromFile("/Tmp/Shrine.MF");
list	/Tmp/Shrine.ISO.C	PkgBin/Shrine.ISO.C
list	/Tmp/Shrine.MF	PkgBin/Shrine.MF

# SnailNet
command	DirMk("/Tmp/SnailNet");
put	/Tmp/SnailNet/Http.HC.Z	Shrine/Packages/SnailNet/Http.HC
put	/Tmp/SnailNet/SnailLib.HC.Z	Shrine/Packages/SnailNet/SnailLib.HC
put	/Tmp/SnailNet/Url.HC.Z	Shrine/Packages/SnailNet/Url.HC
put	/Tmp/SnailNet.MF	Shrine/Packages/SnailNet/manifest
command	PkgMakeFromDir("/Tmp/SnailNet.MF", "/Tmp/SnailNet");
command	PkgInstallFromFile("/Tmp/SnailNet.MF");
list	/Tmp/SnailNet.ISO.C	PkgBin/SnailNet.ISO.C
list	/Tmp/SnailNet.MF	PkgBin/SnailNet.MF

# Wget
put	/Tmp/Wget.HC.Z	Shrine/Packages/Wget/Wget.HC
put	/Tmp/Wget.MF	Shrine/Packages/Wget/manifest
command	PkgMakeFromFile("/Tmp/Wget.MF", "/Tmp/Wget.HC.Z");
command	PkgInstallFromFile("/Tmp/Wget.MF");
list	/Tmp/Wget.ISO.C	PkgBin/Wget.ISO.C
list	/Tmp/Wget.MF	PkgBin/Wget.MF

# Clean up & build a distro
command	DelTree("/Tmp");
command	DirMk("/Tmp");

command	#include "/Misc/DoDistro";
list	/Tmp/ShrineDist.ISO	Shrine-HEAD.iso

command	Reboot;
wait	1
